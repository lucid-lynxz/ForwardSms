// configVersion: 41
// date: 2020.09.07
// description: 添加 floatingActionButton
ext {
    gradleToolVersion = '3.3.2'

    // Android
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 29
    androidCompileSdkVersion = 29
    androidBuildToolsVersion = "29.0.3"
    androidSupportVersion = "28.0.0"

    // androidX
    androidSupportVersionX = '1.1.0'
    androidLegacyVersionX = '1.0.0'
    constraintLayoutVersionX = '1.1.3'

    testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"

    //Libraries
    multiDexVersion = '1.0.3'
    constraintLayoutVersion = '1.1.3'
    rollviewpagerVersion = '1.4.6'
    swipeDelMenuLayoutVersion = 'V1.2.5'
    bgaSswipebacklayoutVersion = '1.0.8@aar'
    recyclerviewfastscrollerVersion = '0.1.3'
    lottieVersion = '2.5.5'
    siyamedShapeIamgeviewVersion = '0.9.3@aar'
    ShimmerRecyclerViewVersion = '1.3'

    kotlinLibVersion = '1.3.61'
    ktxCoreVersion = '1.2.0'
    kotlinxCoroutinesVersion = '1.1.1'

    glideVersion = "4.9.0"

    materialprogressbarVersion = "1.4.1"
    butterKnifeVersion = '8.8.1'
    systembartintVersion = '1.0.3'
    statusBarUtilVersion = '1.2.5'
    photoViewVersion = '2.1.4'

    toastyVersion = "1.3.0"

    zxingVersion = '3.3.0'
    backgroundShapeVersion = '1.3.2'

    // 视频缓存
    videoCacheVersion = '2.7.1'
    gsyVideoPlayerVersion = '6.0.3'

    // 富文本(html/markdown, 不支持css)
    richTextVersion = '3.0.7'
    richTextHtmlParserVersion = '1.0.2'

    okhttpVersion = '4.8.1'
    gsonVersion = '2.8.5'

    rxJavaVersion = '1.1.0'
    rxAndroidVersion = '1.1.0'
    rxJava2Version = '2.1.1'
    rxBinder2Version = '2.1.1'
    retrofit2LoggerVersion = '4.2.1'
    rxkotlin2Version = '2.1.0'
    rxAndroid2Version = '2.0.1'
    rxPermission2Version = '0.9.4@aar'
    retrofit2Version = "2.4.0"
    retrofit2KtxAdapterVersion = "0.9.2"
    // okhttp抓包显示
    readystatesoftwareChuckVersion = "1.1.0"

    // https://github.com/greenrobot/EventBus
    eventbusVersion = "3.1.1"

    fragmentationVersion = "1.3.6"

    leakcanaryVersion = "1.5.1"
    stethoVersion = "1.5.1"

    // arch support 库
    lifeCycleVersion = '1.1.1'
    roomVersion = '1.1.1'
    lifeCycleVersionX = '2.1.0'

    // 友盟统计分享: https://developer.umeng.com/docs/66632/detail/66889
    umengCommonVersion = "1.5.4"

    // 诸葛io统计: https://docs.zhugeio.com/dev/android.html
    zhugeioVersion = '3.3.3'

    // 百度统计: https://mtj.baidu.com/static/userguide/book/android/adconfig/circle/circle.html
    baiduMobStatVersion = 'latest.integration'

    // 高德地图: https://lbs.amap.com/api/android-location-sdk/guide/create-project/android-studio-create-project/
    amapLocationVersion = '4.1.0'

    // test
    jUnitVersion = '4.12'
    mockItoVersion = '2.8.9'
    powermockVersion = '1.7.1'

    espressoVersion = '3.0.2'
    testRunnerVersion = '1.0.2'
    testRulesVersion = '1.0.2'

    jUnitExtVersionX = '1.1.1'
    testRunnerVersionX = '1.2.0'
    espressoVersionX = '3.2.0'


    libs = [
            // support库
            appcompat                     : "com.android.support:appcompat-v7:${androidSupportVersion}",
            supportDesign                 : "com.android.support:design:${androidSupportVersion}",
            supportAnnotation             : "com.android.support:support-annotations:${androidSupportVersion}",
            supportV4                     : "com.android.support:support-v4:${androidSupportVersion}",
            recyclerView                  : "com.android.support:recyclerview-v7:${androidSupportVersion}",
            supportV13                    : "com.android.support:support-v13:${androidSupportVersion}",
            cardView                      : "com.android.support:cardview-v7:${androidSupportVersion}",
            multiDex                      : "com.android.support:multidex:${multiDexVersion}",
            // 使用文章: https://juejin.im/post/5bac92f2f265da0aba70c1bf#heading-8
            constraintLayout              : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",

            // ViewModel and LiveData
            // implementation(libs.lifeCycleExtension)
            // annotationProcessor(libs.lifeCycleCompiler) 或 kapt(libs.lifeCycleCompiler)
            lifeCycleExtension            : "android.arch.lifecycle:extensions:$lifeCycleVersion",
            lifeCycleCompiler             : "android.arch.lifecycle:compiler:$lifeCycleVersion",
            roomRuntime                   : "android.arch.persistence.room:runtime:$roomVersion",
            roomCompiler                  : "android.arch.persistence.room:compiler:$roomVersion",

            // androidX 库
            appcompatX                    : "androidx.appcompat:appcompat:${androidSupportVersionX}",
            supportV4X                    : "androidx.legacy:legacy-support-v4:${androidLegacyVersionX}",
            constraintLayoutX             : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersionX}",

            // // ViewModel and LiveData
            // implementation(libs.lifeCycleExtensionX)
            // annotationProcessor(libs.lifeCycleCompilerX) 或 kapt(libs.lifeCycleCompilerX)
            lifeCycleExtensionX           : "androidx.lifecycle:lifecycle-extensions:$lifeCycleVersionX",
            lifeCycleCompilerX            : "androidx.lifecycle:lifecycle-compiler:$lifeCycleVersionX",
            lifeCycleViewModelKtxX        : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersionX",

            /* 3.x wiki: https://github.com/CymChad/BaseRecyclerViewAdapterHelper/wiki
               2.x wiki: https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/2.x/README-cn.md
               2.9.44 版本是support库, 最新的3.0.1是androidx, 注意区分下
               2.9.x 无限加载更多issue: https://github.com/CymChad/BaseRecyclerViewAdapterHelper/issues/2229
               2.9.x viewpager+fragment+recyclerview切换崩溃issue: https://github.com/CymChad/BaseRecyclerViewAdapterHelper/issues/2843
               implementation(libs.baseRecyclerViewAdapterHelper)
             */
            baseRecyclerViewAdapterHelper : "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50",

            recyclerviewfastscroller      : "xyz.danoz:recyclerviewfastscroller:${recyclerviewfastscrollerVersion}",
            searchableSpinner             : "gr.escsoft.michaelprimez.searchablespinner:SearchableSpinner:1.0.9",
            /*
             * https://github.com/YummyLau/PanelSwitchHelper
             * 输入法切换
             */
            panelSwitchHelper             : 'com.effective.android:panelSwitchHelper:1.3.6',
            panelSwitchHelperX            : 'com.effective.android:panelSwitchHelper-androidx:1.3.6',
            /*
                https://github.com/youth5201314/banner
                广告banner控件,带多种样式(指示器/数字/数字+文字等)
                1.4.10 用的是support库, 2.x是androidX库
             */
            banner                        : "com.youth.banner:banner:1.4.10",

            // 自动轮播的Viewpager
            rollviewpager                 : "com.jude:rollviewpager:${rollviewpagerVersion}",

            // 城市选择器: https://github.com/crazyandcoder/citypicker
            // 仿iOS滚轮实现、仿京东样式、一级城市列表、三级城市列表
            cityPicker                    : "liji.library.dev:citypickerview:5.2.1",

            // 日期/城市/时间选择器: https://github.com/Bigkoo/Android-PickerView
            pickerView                    : "com.contrarywind:Android-PickerView:4.1.9",

            toasty                        : "com.github.GrenderG:Toasty:${toastyVersion}",

            // [替代shape,直接在xml中设置相关属性](https://github.com/JavaNoober/BackgroundLibrary)
            backgroundShape               : "com.noober.background:core:$backgroundShapeVersion",
            // 滑动删除
            swipeDelMenuLayout            : "com.github.mcxtzhang:SwipeDelMenuLayout:${swipeDelMenuLayoutVersion}",
            // 滑动返回
            bgaSwipebacklayout            : "cn.bingoogolapple:bga-swipebacklayout:${bgaSswipebacklayoutVersion}",

            // 可指定imageView为圆形/圆角/五星等形状
            siyamedShapeIamgeview         : "com.github.siyamed:android-shape-imageview:$siyamedShapeIamgeviewVersion",
            // 支持图片缩放的 imageView
            // https://github.com/chrisbanes/PhotoView
            photoView                     : "com.github.chrisbanes:PhotoView:$photoViewVersion",

            // 富文本及新html解析器: https://github.com/zzhoujay/RichText
            richText                      : "com.zzhoujay.richtext:richtext:$richTextVersion",
            richTextHtmlParser            : "com.zzhoujay:html:$richTextHtmlParserVersion",

            /*
                https://github.com/hackware1993/MagicIndicator
                viewpager指示器框架,支持多种样式
                maven { url "https://jitpack.io" }
                implementation(libs.magicIndicator){ exclude group: "com.android.support", module: "appcompat-v7" }
             */
            magicIndicator                : "com.github.hackware1993:MagicIndicator:1.6.0",
            /*
               https://github.com/H07000223/FlycoTabLayout/blob/master/README_CN.md
               TabLayout 支持多种样式, 使用的support库
               implementation(libs.flycoTabLayout) { exclude group: "com.android.support", module: "support-v4" }
             */
            flycoTabLayout                : "com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar",

            /*
            * 仿微信图片压缩库,生成jpeg图片: https://github.com/Curzibn/Luban
            */
            luban                         : "top.zibin:Luban:1.1.8",

            /*
                https://github.com/woxingxiao/BubbleSeekBar
                有lite版本,如 3.20-lite, 只支持xml属性,增强版支持java设置相关属性
                implementation(libs.bubbleseekbar) { exclude group: "com.android.support", module: "appcompat-v7" }
             */
            bubbleseekbar                 : "com.xw.repo:bubbleseekbar:3.20",
            // https://github.com/rubensousa/PreviewSeekBar
            PreviewSeekBar                : "com.github.rubensousa:previewseekbar:2.0.0",

            // 视频缓存
            videoCache                    : "com.danikula:videocache:${videoCacheVersion}",
            gsyVideoPlayer                : "com.shuyu:GSYVideoPlayer:${gsyVideoPlayerVersion}",

            // 骨架图
            shimmerRecyclerView           : "com.github.sharish:ShimmerRecyclerView:v${ShimmerRecyclerViewVersion}",

            kotlinLib                     : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinLibVersion}",
            ktxCore                       : "androidx.core:core-ktx:$ktxCoreVersion",
            kotlinxCoroutinesCore         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinxCoroutinesVersion}",
            kotlinxCoroutinesAndroid      : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinxCoroutinesVersion}",

            gson                          : "com.google.code.gson:gson:${gsonVersion}",
            /*
              https://github.com/square/okhttp
              conscrypt 库使用于解决issue: https://github.com/square/okhttp/issues/5760
              implementation(libs.conscrypt)  // okhttp 4.8.1+ 后不需要

              implementation(libs.okHttp)
              implementation(libs.okHttpLogging)
            * */
            okHttp                        : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
            conscrypt                     : "org.conscrypt:conscrypt-android:2.2.1",
            okHttpLogging                 : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}",

            rxJava                        : "io.reactivex:rxjava:${rxJavaVersion}",
            rxAndroid                     : "io.reactivex:rxandroid:${rxAndroidVersion}",
            rxJava2                       : "io.reactivex.rxjava2:rxjava:${rxJava2Version}",
            rxAndroid2                    : "io.reactivex.rxjava2:rxandroid:${rxAndroid2Version}",
            rxBinding2                    : "com.jakewharton.rxbinding2:rxbinding:${rxBinder2Version}",
            rxKotlin2                     : "io.reactivex.rxjava2:rxkotlin:$rxkotlin2Version",
            rxPermission2                 : "com.tbruyelle.rxpermissions2:rxpermissions:${rxPermission2Version}",

            retrofit2                     : "com.squareup.retrofit2:retrofit:${retrofit2Version}",
            retrofit2Gson                 : "com.squareup.retrofit2:converter-gson:${retrofit2Version}",

            // retrofit kotlin coroutines 适配器
            retrofit2KtxAdapter           : "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit2KtxAdapterVersion",
            retrofit2Rxjava               : "com.squareup.retrofit2:adapter-rxjava:${retrofit2Version}",
            retrofit2Rxjava2              : "com.squareup.retrofit2:adapter-rxjava2:${retrofit2Version}",
            retrofit2Logging              : "com.squareup.okhttp3:logging-interceptor:${retrofit2LoggerVersion}",

            /* 抓包工具, 直接在app上查看, https://github.com/jgilfelt/chuck
               debugImplementation(libs.readystatesoftwareChuckDebug)
               releaseImplementation(libs.readystatesoftwareChuckRelease)
             */
            readystatesoftwareChuckDebug  : "com.readystatesoftware.chuck:library:${readystatesoftwareChuckVersion}",
            readystatesoftwareChuckRelease: "com.readystatesoftware.chuck:library-no-op:${readystatesoftwareChuckVersion}",

            /* Facebook 出品: https://github.com/facebook/stetho
             implementation(libs.stetho)
             implementation(libs.stethoOkhttp3)
             1. 在 application#onCreate() 中进行初始化: Stetho.initializeWithDefaults(this);
             2. 创建 retrofit 时, OkHttpClient httpClient = new OkHttpClient.Builder().addNetworkInterceptor(new StethoInterceptor()).build();
             3. 在 chrome 中输入: chrome://inspect 查看, 注意: 首次连接需要科学上网
             */
            stetho                        : "com.facebook.stetho:stetho:$stethoVersion",
            stethoOkhttp3                 : "com.facebook.stetho:stetho-okhttp3:$stethoVersion",

            eventbus                      : "org.greenrobot:eventbus:${eventbusVersion}",
            fragmentation                 : "me.yokeyword:fragmentation:${fragmentationVersion}",

            leakcanary                    : "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion",

            // 图片加载: https://github.com/bumptech/glide
            // implementation(libs.glide){ exclude group: "com.android.support"}
            // annotationProcessor(libs.glideCompiler) 或者  kapt(libs.glideCompiler)
            glide                         : "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler                 : "com.github.bumptech.glide:compiler:${glideVersion}",

            lottie                        : "com.airbnb.android:lottie:${lottieVersion}",

            // 水平和圆形进度条:https://github.com/zhanghai/MaterialProgressBar
            materialprogressbar           : "me.zhanghai.android.materialprogressbar:library:${materialprogressbarVersion}",
            // 分步进度条:https://github.com/kofigyan/StateProgressBar
            stateprogressbar              : "com.kofigyan.stateprogressbar:stateprogressbar:1.0.0",

            // https://github.com/JakeWharton/butterknife
            // 8.8.1 是support库,最新的 10.x 是androidx库
            // implementation(libs.butterKnife)
            // annotationProcessor(libs.butterKnifeCompiler) 或 kapt(libs.butterKnifeCompiler)
            butterKnife                   : "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterKnifeCompiler           : "com.jakewharton:butterknife-compiler:${butterKnifeVersion}",

            // https://github.com/zcweng/SwitchButton
            switchButton                  : "com.github.zcweng:switch-button:0.0.3@aar",

            // https://github.com/Clans/FloatingActionButton
            // 该库已停止维护
            floatingActionButton          : "com.github.clans:fab:1.6.4",

            zxing                         : "com.google.zxing:core:${zxingVersion}",

            // 沉浸式状态栏工具库
            statusBarUtil                 : "com.jaeger.statusbaruitl:library:$statusBarUtilVersion",

            /*
             极光推送: https://docs.jiguang.cn/jpush/client/Android/android_guide/
             需要自定义service和receiver,详见文档
                implementation(libs.jcore)
                implementation(libs.jpush)
             */
            jcore                         : "cn.jiguang.sdk:jcore:2.3.4",
            jpush                         : "cn.jiguang.sdk:jpush:3.6.0",
            zhugeio                       : "com.zhuge.analysis:zhugeio:${zhugeioVersion}",
            baiduMobStat                  : "com.baidu.mobstat:mtj-sdk-circle:${baiduMobStatVersion}",
            amapLocation                  : "com.amap.api:location:${amapLocationVersion}",


            // 个人库
            /*
            加密sp: https://github.com/lucid-lynxz/ForwardSms/tree/master/SecuritySP
            implementation(libs.kotlinLib)
            implementation(libs.securitySp)
             */
            securitySp                    : "org.lynxz.securitysp:SecuritySp:1.0.5",
            /*
            长流程封装fragment,已集成权限申请功能: https://github.com/lucid-lynxz/TransFragment
            implementation(libs.kotlinLib)
            implementation(libs.appcompat)
            implementation(libs.transFragment)
            * */
            transFragment                 : "org.lynxz.transfragment:TransFragment:1.0.0",

            /*
            * umeng微信登录和分享二次包装库: https://github.com/lucid-lynxz/LoginDemo.git
            * 需要kotlin支持
            *
            * implementation(libs.kotlinLib)
            * implementation(libs.umengWrapper)
            */
            umengWrapper                  : "org.lynxz.umeng_wrapper:umeng_wrapper:1.0.4",
            /*
            * 自动创建三方框架必须的空类注解: https://github.com/lucid-lynxz/LoginDemo.git
            * 如微信登录回调页面 WXEntryActivity
            *
            * implementation(libs.thirdClassGeneration)
            * kapt(libs.thirdClassGeneration) 或者 annotationProcessor(libs.thirdClassGeneration)
            *
            * P.S. 使用kapt可能需要在 gradle 中添加如下配置:
            * android{
            *   defaultConfig{
            *       javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
            *   }
            * }
            *
            * 在 app 主module任意类上添加注解,即可自动生成 {applicationId}.wxapi.WXEntryActivity
            * <pre>
                @ThirdActivityAutoGenerator(
                      getApplicationId = BuildConfig.APPLICATION_ID,
                      getSubPackageName = "wxapi",
                      getTargetActivityName = "WXEntryActivity",
                      getSupperClass = WXTemplateActivity::class
                  )
            * </pre>
            */
            thirdClassGeneration          : "org.lynxz.third_generation:third_generation:1.0.1",

            /*
             * 支付相关封装库: https://github.com/lucid-lynxz/PayWrapper.git
             * 主module需要提供kotlin支持
             *
             * implementation(libs.kotlinLib)
             *
             * implementation(libs.basePayWrapper) // 必须
             * implementation(libs.wechatPayWrapper) // 按需,微信支付
             * implementation(libs.aliPayWrapper) // 按需,支付宝支付
             */
            basePayWrapper                : 'org.lynxz.basepaywrapper:basepaywrapper:1.0.5',
            wechatPayWrapper              : 'org.lynxz.wechatpaywrapper:wechatpaywrapper:1.0.5',
            aliPayWrapper                 : 'org.lynxz.alipaywrapper:alipaywrapper:1.0.5',
    ]

    test = [
            // support库
            junit              : "junit:junit:${jUnitVersion}", // 使用: testImplementation(test.junit)
            testRunner         : "com.android.support.test:runner:${testRunnerVersion}", // 使用: testImplementation(test.testRunnerX)
            testRules          : "com.android.support.test:rules:${testRulesVersion}",
            espresso           : "com.android.support.test.espresso:espresso-core:${espressoVersion}",// 使用: androidTestImplementation(test.espresso)

            // androidX测试库
            junitExtX          : "androidx.test.ext:junit:${jUnitExtVersionX}", // 导入 junit后使用androidx还需要导入ext库: androidTestImplementation(test.junitExtX)
            testRunnerX        : "androidx.test:runner:${testRunnerVersionX}",
            espressoX          : "androidx.test.espresso:espresso-core:${espressoVersionX}",

            mockIto            : "org.mockito:mockito-core:${mockItoVersion}",
            powermockJunit4    : "org.powermock:powermock-module-junit4:${powermockVersion}",
            powermockApiMockito: "org.powermock:powermock-api-mockito2:${powermockVersion}",
    ]

    classPathLib = [
            gradleTool        : "com.android.tools.build:gradle:$gradleToolVersion",
            kotlinGradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinLibVersion"
    ]
}